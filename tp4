# Renaud Deschenes 401
# On importe les modules nécessaires
import arcade
import random

# On définit la taille de l`écran
SCREEN_WIDTH = 1500
SCREEN_HEIGHT = 1000
# On cree une liste de couleurs
COLORS = [arcade.color.BLUE, arcade.color.FANDANGO_PINK,
          arcade.color.FRENCH_ROSE, arcade.color.GOLDEN_POPPY]


# On définit la classe Cercle avec ses attributs
class Balle:
    def __init__(self, x, y, change_x, change_y, rayon, color):
        self.x = x
        self.y = y
        self.change_x = change_x
        self.change_y = change_y
        self.rayon = rayon
        self.color = color

# On définit la méthode update qui permet de faire bouger les cercles
    def update(self):
        self.x += self.change_x
        self.y += self.change_y
# Si les cercles touchent les bords de l'écran, ils rebondissent inversement
        if self.x + self.rayon > SCREEN_WIDTH:
            self.change_x *= -1
        if self.x - self.rayon < 0:
            self.change_x *= -1
        if self.y + self.rayon > SCREEN_HEIGHT:
            self.change_y *= -1
        if self.y - self.rayon < 0:
            self.change_y *= -1

# On définit la méthode draw qui permet de dessiner les cercles
    def draw(self):
        arcade.draw_circle_filled(self.x, self.y, self.rayon, self.color)


# On définit la classe Rectangle avec ses attributs
class Rectangle:
    def __init__(self, x, y, change_x, change_y, width, height, color, angle):
        self.x = x
        self.y = y
        self.change_x = change_x
        self.change_y = change_y
        self.width = width
        self.height = height
        self.color = color
        self.angle = angle

# On définit la méthode update qui permet de faire bouger les rectangles
    def update(self):
        self.x += self.change_x
        self.y += self.change_y
# Si les rectangles touchent les bords de l'écran, ils rebondissent inversement
        if self.x + self.width/2 > SCREEN_WIDTH:
            self.change_x *= -1
        if self.x - self.width/2 < 0:
            self.change_x *= -1
        if self.y + self.height/2 > SCREEN_HEIGHT:
            self.change_y *= -1
        if self.y - self.height/2 < 0:
            self.change_y *= -1

# On définit la méthode draw qui permet de dessiner les rectangles
    def draw(self):
        arcade.draw_rectangle_filled(self.x, self.y, self.width, self.height, self.color, self.angle)


# On définit la classe MyGame qui hérite de la classe Window
class MyGame(arcade.Window):
    def __init__(self):
        super().__init__(SCREEN_WIDTH, SCREEN_HEIGHT, "Never gonna give you up, never gonna let you down, never gonna run around and desert you, never gonna make you cry, never gonna say goodbye, never gonna tell a lie and hurt you")
# On définit les listes qui contiendront les cercles et les rectangles
        self.liste_balles = []
        self.liste_rectangles = []

# On définit la méthode setup qui permet de creer la feneêtre et la logique du jeu
    def setup(self):
        arcade.set_background_color(arcade.color.BLACK)
        arcade.schedule(self.update, 1/60)

# On définit la méthode update qui permet de mettre à jour les cercles et les rectangles
    def update(self, delta_time):
        for balle in self.liste_balles:
            balle.update()
        for rectangle in self.liste_rectangles:
            rectangle.update()

# On définit la méthode draw qui permet de dessiner les cercles et les rectangles
    def on_draw(self):
        arcade.start_render()
        for balle in self.liste_balles:
            balle.draw()
        for rectangle in self.liste_rectangles:
            rectangle.draw()

# On définit la méthode on_mouse_press qui permet de créer des cercles et des rectangles avec des parametres aléatoire
    def on_mouse_press(self, x, y, button, modifiers):
        if button == arcade.MOUSE_BUTTON_LEFT:
            rayon = random.uniform(10, 30)
            color = random.choice(COLORS)
            balle = Balle(x, y, random.uniform(-5, 5), random.uniform(-5, 5), rayon, color)
            if balle.change_y == 0:
                balle.change_y = 1
            if balle.change_x == 0:
                balle.change_x = 1
            self.liste_balles.append(balle)
        elif button == arcade.MOUSE_BUTTON_RIGHT:
            width = random.uniform(20, 50)
            height = random.uniform(20, 50)
            color = random.choice(COLORS)
            rectangle = Rectangle(x, y, random.uniform(-5, 5), random.uniform(-5, 5), width, height, color, random.uniform(1, 180))
            if rectangle.change_y == 0:
                rectangle.change_y = 1
            if rectangle.change_x == 0:
                rectangle.change_x = 1
            self.liste_rectangles.append(rectangle)


# On définit la fonction main qui permet de lancer le jeu
def main():
    window = MyGame()
    window.setup()
    arcade.run()


# On appelle la fonction main
main()
