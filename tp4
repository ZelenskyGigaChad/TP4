import arcade
import random


SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
COLORS = [arcade.color.BLUE, arcade.color.FANDANGO_PINK,
          arcade.color.FRENCH_ROSE, arcade.color.GOLDEN_POPPY]

class Balle:
    def __init__(self, x, y, change_x, change_y, rayon, color):
        self.x = x
        self.y = y
        self.change_x = change_x
        self.change_y = change_y
        self.rayon = rayon
        self.color = color

    def update(self):

        self.x += self.change_x
        self.y += self.change_y

        if self.x < self.rayon:

            self.change_x *= -1
        elif self.x > SCREEN_WIDTH - self.rayon:

            self.change_x *= -1
        if self.y < self.rayon:

            self.change_y *= -1
        elif self.y > SCREEN_HEIGHT - self.rayon:

            self.change_y *= -1

    def draw(self):
        arcade.draw_circle_filled(self.x, self.y, self.rayon, self.color)


class Rectangle:
    def __init__(self, x, y, change_x, change_y, width, height, color, angle):
        self.x = x
        self.y = y
        self.change_x = change_x
        self.change_y = change_y
        self.width = width
        self.height = height
        self.color = color
        self.angle = angle

    def update(self):

        self.x += self.change_x
        self.y += self.change_y


        if self.x < 0:
            self.x = 0
            self.change_x *= -1
        elif self.x > SCREEN_WIDTH - self.width:
            self.x = SCREEN_WIDTH - self.width
            self.change_x *= -1
        if self.y < 0:
            self.y = 0
            self.change_y *= -1
        elif self.y > SCREEN_HEIGHT - self.height:
            self.y = SCREEN_HEIGHT - self.height
            self.change_y *= -1

    def draw(self):
        arcade.draw_rectangle_filled(self.x, self.y, self.width, self.height, self.color, self.angle)


class MyGame(arcade.Window):
    def __init__(self):
        super().__init__(SCREEN_WIDTH, SCREEN_HEIGHT, "Exercice 1")
        self.liste_balles = []
        self.liste_rectangles = []

    def setup(self):
        arcade.set_background_color(arcade.color.BLACK)
        arcade.schedule(self.update, 1/60)
    def update(self, delta_time):
        for balle in self.liste_balles:
            balle.update()
        for rectangle in self.liste_rectangles:
            rectangle.update()
    def on_draw(self):
        arcade.start_render()
        for balle in self.liste_balles:
            balle.draw()
        for rectangle in self.liste_rectangles:
            rectangle.draw()


    def on_mouse_press(self, x, y, button, modifiers):
        if button == arcade.MOUSE_BUTTON_LEFT:
            rayon = random.uniform(10, 30)
            color = random.choice(COLORS)
            balle = Balle(x, y, random.uniform(-5, 5), random.uniform(-5, 5), rayon, color)
            if balle.change_y == 0:
                balle.change_y = 1
            if balle.change_x == 0:
                balle.change_x = 1
            self.liste_balles.append(balle)
        elif button == arcade.MOUSE_BUTTON_RIGHT:
            width = random.uniform(20, 50)
            height = random.uniform(20, 50)
            color = random.choice(COLORS)
            rectangle = Rectangle(x, y, random.uniform(-5, 5), random.uniform(-5, 5), width, height, color, random.uniform(1,180))
            if rectangle.change_y == 0:
                rectangle.change_y = 1
            if rectangle.change_x == 0:
                rectangle.change_x = 1
            self.liste_rectangles.append(rectangle)
def main():
    window = MyGame()
    window.setup()
    arcade.run()



main()
